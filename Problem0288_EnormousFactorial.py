"""
An enormous factorial
Problem 288
For any prime p the number N(p,q) is defined by N(p,q) = âˆ‘n=0 to q Tn*pn
with Tn generated by the following random number generator:

S0 = 290797
Sn+1 = Sn2 mod 50515093
Tn = Sn mod p

Let Nfac(p,q) be the factorial of N(p,q).
Let NF(p,q) be the number of factors p in Nfac(p,q).

You are given that NF(3,10000) mod 320=624955285.

Find NF(61,107) mod 6110


Answer:
605857431263981935
Completed on Fri, 17 Jun 2016, 08:14
"""

import time
rrr=time.time()

def Tn(p,n):
    s0=290797
    f=[s0%p]
    i=1
    while i<n:
        s0=(s0*s0)%50515093
        i+=1
        f.append(s0%p)
    print("returning")
    print (time.time()-rrr)
    return f
"""
n=1008445#75 second to get 10**8
sieve=[True]* n
primes=[2]
import math

for i in range(4,n,2):
   
    sieve[i]=False
for i in range(3,n,2):
    if sieve[i]==True:
        primes.append(i)        
        for j in range(i*i,n,i):
            sieve[j]=False
"""
"""
def factor(x):
    d=[]
    for i in primes:
        while x%i==0:
            d.append(i)
            x//=i
        if x==1:
            return d
    d.append(x)
    return d

def numPrimes(b,p):
    count=0
    cat=True
    n=math.factorial(b)
    while cat:
        if n%p==0:
            count+=1
            n//=p
        else:
            cat=False
    return count
"""
def N(p,q):
    T=Tn(p,q+1)
    cat=0
    for n in range(q+1):
        
        cat+=T[n]*(p**n)
    return cat


#note know max power of 3
count=0
f=3**20
"""
for i in range(1,10001):
    x=3**i
    count+=s//x
print (count%f)
"""
#s=N(61,10**7)



def NN(p,q):
    T=Tn(p,q+1)
    hold=0
    M=q
    while M>=0:
        hold=hold*3+T[M]
        M-=1
    return hold
f=61**10
def TnT(p,n):
    s0=290797
    cost=0#T[0] is discarded as  it is less then p
    i=1
    b=1
    h=p
    while i<=n :
         
        s0=(s0*s0)%50515093
        i+=1
        cost+=(s0%p)*b
        b+=h
        h*=p
        h%=f#note speed fix here
        
     
    print (time.time()-rrr,"returning time" )
     
    return cost

f=61**10 
rrr=time.time()
g=TnT(61,10000000)%f
print("...> ",g)
#solution

#9.205591917037964 returning time
#...>  605857431263981935
def NNN(p,q):
    T=Tn(p,q+1)
    hold=0
    m=1
    n=1
    while n<=q:
         
        m*=p
        hold+=T[n]*((m-1)//2)
        n+=1
    
    return hold

"""
rrr=time.time()
ss= NN(3,10000)
print (time.time()-rrr)
count=0
f=3**20
print(ss%f)
 
rrr=time.time()
ss= NNN(61,1000000)
print (time.time()-rrr)
count=0
f=61**10
print(ss%f)

 
for i in range(1,10001):
    x=3**i
    count+=ss//x
print (count%f)

rrr=time.time()
ss=NN(61,1000000)
print (time.time()-rrr)

 
40180147816159095851531217
68998208978920939146
(3a+9b+27c+81d)
1,4,13,40
a+3b+9c+27d  //3
b+3c+9d      //9
c+3d         //27
d            //81
while max>0:
   hold=T[max]         d
   max-=1
   hold+=hold*3+T[max]   c+3d
hold*=3
d
c+3d
b+3c+9d
a+3b+9c+27d

3a+9b+27c+81d














def N(p,q):
    T=Tn(p,q+1)
    cat=0
    for n in range(q+1):
        
        cat+=T[n]*(p**n)
    return cat




T[0]*1 +T[1]*3 +T[2]*9 + T[3]*27 +T[4]*81


//3
//9
//27
//81
so T[0] is discarded...
"""
